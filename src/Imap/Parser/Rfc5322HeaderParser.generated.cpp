
#line 1 "Rfc5322HeaderParser.cpp"
/* Copyright (C) 2006 - 2012 Jan Kundr√°t <jkt@flaska.net>

   This file is part of the Trojita Qt IMAP e-mail client,
   http://trojita.flaska.net/

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public
   License as published by the Free Software Foundation; either
   version 2 of the License, or the version 3 of the License.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.  If not, write to
   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.
*/

#include <QDebug>
#include "Imap/Parser/Rfc5322HeaderParser.h"

#define DBG(X) do {qDebug() << X << "(current char:" << *p << ")";} while(false);
//#define RAGEL_DEBUG

namespace Imap {
namespace Parser {


#line 35 "Rfc5322HeaderParser.generated.cpp"
static const char _rfc5322_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 6, 2, 1, 5, 
	2, 3, 0, 2, 3, 1, 2, 5, 
	1, 3, 3, 1, 5, 3, 3, 5, 
	1
};

static const short _rfc5322_key_offsets[] = {
	0, 0, 1, 4, 7, 11, 16, 21, 
	26, 31, 36, 41, 46, 51, 56, 61, 
	64, 83, 102, 103, 105, 123, 124, 134, 
	143, 144, 146, 148, 157, 158, 160, 162, 
	180, 181, 183, 201, 207, 208, 210, 219, 
	220, 222, 224, 243, 244, 246, 265, 271, 
	272, 274, 283, 284, 286, 288, 306, 307, 
	309, 328, 347, 366, 367, 376, 377, 379, 
	381, 390, 391, 393, 395, 413, 422, 423, 
	425, 427, 438, 439, 441, 443, 448, 449, 
	451, 460, 461, 463, 465, 475, 484, 485, 
	487, 489, 498, 499, 501, 503, 512, 513, 
	515, 517, 518, 542, 566, 570, 593, 597, 
	606, 615, 619, 622, 631, 639, 643, 646, 
	654, 677, 681, 704, 712, 716, 724, 728, 
	731, 739, 763, 767, 791, 799, 803, 811, 
	815, 818, 826, 849, 853, 877, 901, 925, 
	929, 937, 941, 944, 952, 960, 964, 967, 
	975, 998, 1006, 1010, 1013, 1021, 1031, 1035, 
	1038, 1048, 1055, 1059, 1067, 1071, 1074, 1082, 
	1091, 1100, 1104, 1107, 1116, 1124, 1128, 1131, 
	1139, 1147, 1151, 1154, 1162, 1185, 1189, 1212, 
	1220, 1224, 1232, 1236, 1239, 1247, 1271, 1275, 
	1299, 1307, 1311, 1319, 1323, 1326, 1334, 1357, 
	1361, 1385, 1409, 1433, 1437, 1445, 1449, 1452, 
	1460, 1468, 1472, 1475, 1483, 1506, 1514, 1518, 
	1521, 1529, 1539, 1543, 1546, 1556, 1563, 1567, 
	1575, 1579, 1582, 1590, 1599, 1608, 1612, 1615, 
	1624, 1632, 1636, 1639, 1647, 1654, 1655, 1664, 
	1673, 1682, 1691, 1700, 1709, 1718, 1727, 1736, 
	1745, 1754, 1763, 1772, 1781, 1790, 1799, 1808, 
	1817, 1826, 1835, 1844, 1853, 1862, 1871, 1880, 
	1889, 1898, 1907, 1916, 1925, 1934, 1943, 1952, 
	1961, 1970, 1979, 1988, 1997, 2006, 2015
};

static const char _rfc5322_trans_keys[] = {
	10, 58, 33, 126, 13, 0, 127, 10, 
	13, 0, 127, 58, 69, 101, 33, 126, 
	58, 70, 102, 33, 126, 58, 69, 101, 
	33, 126, 58, 82, 114, 33, 126, 58, 
	69, 101, 33, 126, 58, 78, 110, 33, 
	126, 58, 67, 99, 33, 126, 58, 69, 
	101, 33, 126, 58, 83, 115, 33, 126, 
	9, 32, 58, 33, 126, 9, 32, 58, 
	9, 13, 32, 34, 40, 45, 60, 61, 
	63, 33, 39, 42, 43, 47, 57, 65, 
	90, 94, 126, 9, 13, 32, 34, 40, 
	45, 60, 61, 63, 33, 39, 42, 43, 
	47, 57, 65, 90, 94, 126, 10, 9, 
	32, 9, 13, 32, 34, 40, 60, 61, 
	63, 33, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 10, 9, 13, 32, 92, 
	1, 8, 11, 33, 35, 127, 9, 13, 
	32, 34, 92, 1, 8, 11, 127, 10, 
	9, 32, 0, 127, 13, 41, 92, 1, 
	9, 11, 39, 42, 127, 10, 9, 32, 
	0, 127, 9, 13, 32, 34, 40, 45, 
	61, 63, 33, 39, 42, 43, 47, 57, 
	65, 90, 94, 126, 10, 9, 32, 9, 
	13, 32, 33, 40, 46, 61, 64, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 40, 46, 64, 10, 
	9, 32, 13, 41, 92, 1, 9, 11, 
	39, 42, 127, 10, 9, 32, -128, -1, 
	9, 13, 32, 33, 40, 45, 61, 63, 
	91, 35, 39, 42, 43, 47, 57, 65, 
	90, 94, 126, 10, 9, 32, 9, 13, 
	32, 33, 40, 46, 62, 35, 39, 42, 
	43, 45, 57, 61, 63, 65, 90, 94, 
	126, 9, 13, 32, 40, 46, 62, 10, 
	9, 32, 13, 41, 92, 1, 9, 11, 
	39, 42, 127, 10, 9, 32, -128, -1, 
	9, 13, 32, 33, 40, 45, 61, 63, 
	35, 39, 42, 43, 47, 57, 65, 90, 
	94, 126, 10, 9, 32, 9, 13, 32, 
	33, 40, 46, 62, 35, 39, 42, 43, 
	45, 57, 61, 63, 65, 90, 94, 126, 
	9, 13, 32, 34, 40, 45, 60, 61, 
	63, 33, 39, 42, 43, 47, 57, 65, 
	90, 94, 126, 9, 13, 32, 34, 40, 
	45, 60, 61, 63, 33, 39, 42, 43, 
	47, 57, 65, 90, 94, 126, 10, 13, 
	41, 92, 1, 9, 11, 39, 42, 127, 
	10, 9, 32, 0, 127, 13, 41, 92, 
	1, 9, 11, 39, 42, 127, 10, 9, 
	32, 0, 127, 9, 13, 32, 33, 40, 
	45, 61, 63, 35, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, 13, 41, 92, 
	1, 9, 11, 39, 42, 127, 10, 9, 
	32, 0, 127, 9, 13, 32, 92, 93, 
	1, 8, 11, 90, 94, 127, 10, 9, 
	32, 0, 127, 9, 13, 32, 40, 62, 
	10, 9, 32, 13, 41, 92, 1, 9, 
	11, 39, 42, 127, 10, 9, 32, 0, 
	127, 9, 13, 32, 92, 1, 8, 11, 
	33, 35, 127, 9, 13, 32, 34, 92, 
	1, 8, 11, 127, 10, 9, 32, 0, 
	127, 13, 41, 92, 1, 9, 11, 39, 
	42, 127, 10, 9, 32, 0, 127, 13, 
	41, 92, 1, 9, 11, 39, 42, 127, 
	10, 9, 32, 0, 127, 10, 9, 13, 
	32, 34, 40, 41, 44, 46, 60, 61, 
	63, 127, 0, 31, 33, 57, 58, 64, 
	65, 90, 91, 93, 94, 126, 9, 13, 
	32, 34, 40, 41, 44, 46, 60, 61, 
	63, 127, 0, 31, 33, 57, 58, 64, 
	65, 90, 91, 93, 94, 126, 10, 13, 
	0, 127, 9, 13, 32, 34, 40, 41, 
	44, 60, 61, 63, 127, 0, 31, 33, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 10, 13, 0, 127, 0, 9, 10, 
	13, 32, 34, 92, 1, 127, 0, 9, 
	10, 13, 32, 34, 92, 1, 127, 10, 
	13, 0, 127, 13, 0, 127, 0, 9, 
	10, 13, 32, 34, 92, 1, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 10, 
	13, 0, 127, 13, 0, 127, 0, 10, 
	13, 40, 41, 92, 1, 127, 9, 13, 
	32, 34, 40, 41, 44, 46, 61, 63, 
	127, 0, 31, 33, 57, 58, 64, 65, 
	90, 91, 93, 94, 126, 10, 13, 0, 
	127, 9, 13, 32, 33, 40, 41, 44, 
	46, 61, 64, 127, 0, 34, 35, 57, 
	58, 62, 63, 90, 91, 93, 94, 126, 
	9, 13, 32, 40, 46, 64, 0, 127, 
	10, 13, 0, 127, 0, 10, 13, 40, 
	41, 92, 1, 127, 10, 13, 0, 127, 
	13, 0, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 9, 13, 32, 33, 40, 
	41, 44, 46, 61, 63, 91, 127, 0, 
	34, 35, 57, 58, 64, 65, 90, 92, 
	93, 94, 126, 10, 13, 0, 127, 9, 
	13, 32, 33, 40, 41, 44, 46, 61, 
	62, 63, 127, 0, 34, 35, 57, 58, 
	64, 65, 90, 91, 93, 94, 126, 9, 
	13, 32, 40, 46, 62, 0, 127, 10, 
	13, 0, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 10, 13, 0, 127, 13, 
	0, 127, 0, 10, 13, 40, 41, 92, 
	1, 127, 9, 13, 32, 33, 40, 41, 
	44, 46, 61, 63, 127, 0, 34, 35, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 10, 13, 0, 127, 9, 13, 32, 
	33, 40, 41, 44, 46, 61, 62, 63, 
	127, 0, 34, 35, 57, 58, 64, 65, 
	90, 91, 93, 94, 126, 9, 13, 32, 
	34, 40, 41, 44, 46, 60, 61, 63, 
	127, 0, 31, 33, 57, 58, 64, 65, 
	90, 91, 93, 94, 126, 9, 13, 32, 
	34, 40, 41, 44, 46, 60, 61, 63, 
	127, 0, 31, 33, 57, 58, 64, 65, 
	90, 91, 93, 94, 126, 10, 13, 0, 
	127, 0, 10, 13, 40, 41, 92, 1, 
	127, 10, 13, 0, 127, 13, 0, 127, 
	0, 10, 13, 40, 41, 92, 1, 127, 
	0, 10, 13, 40, 41, 92, 1, 127, 
	10, 13, 0, 127, 13, 0, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 9, 
	13, 32, 33, 40, 41, 44, 46, 61, 
	63, 127, 0, 34, 35, 57, 58, 64, 
	65, 90, 91, 93, 94, 126, 0, 10, 
	13, 40, 41, 92, 1, 127, 10, 13, 
	0, 127, 13, 0, 127, 0, 10, 13, 
	40, 41, 92, 1, 127, 0, 9, 10, 
	13, 32, 91, 92, 93, 1, 127, 10, 
	13, 0, 127, 13, 0, 127, 0, 9, 
	10, 13, 32, 91, 92, 93, 1, 127, 
	9, 13, 32, 40, 62, 0, 127, 10, 
	13, 0, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 10, 13, 0, 127, 13, 
	0, 127, 0, 10, 13, 40, 41, 92, 
	1, 127, 0, 9, 10, 13, 32, 34, 
	92, 1, 127, 0, 9, 10, 13, 32, 
	34, 92, 1, 127, 10, 13, 0, 127, 
	13, 0, 127, 0, 9, 10, 13, 32, 
	34, 92, 1, 127, 0, 10, 13, 40, 
	41, 92, 1, 127, 10, 13, 0, 127, 
	13, 0, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 10, 13, 0, 127, 13, 
	0, 127, 0, 10, 13, 40, 41, 92, 
	1, 127, 9, 13, 32, 34, 40, 41, 
	44, 46, 61, 63, 127, 0, 31, 33, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 10, 13, 0, 127, 9, 13, 32, 
	33, 40, 41, 44, 46, 61, 64, 127, 
	0, 34, 35, 57, 58, 62, 63, 90, 
	91, 93, 94, 126, 9, 13, 32, 40, 
	46, 64, 0, 127, 10, 13, 0, 127, 
	0, 10, 13, 40, 41, 92, 1, 127, 
	10, 13, 0, 127, 13, 0, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 9, 
	13, 32, 33, 40, 41, 44, 46, 61, 
	63, 91, 127, 0, 34, 35, 57, 58, 
	64, 65, 90, 92, 93, 94, 126, 10, 
	13, 0, 127, 9, 13, 32, 33, 40, 
	41, 44, 46, 61, 62, 63, 127, 0, 
	34, 35, 57, 58, 64, 65, 90, 91, 
	93, 94, 126, 9, 13, 32, 40, 46, 
	62, 0, 127, 10, 13, 0, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 10, 
	13, 0, 127, 13, 0, 127, 0, 10, 
	13, 40, 41, 92, 1, 127, 9, 13, 
	32, 33, 40, 41, 44, 46, 61, 63, 
	127, 0, 34, 35, 57, 58, 64, 65, 
	90, 91, 93, 94, 126, 10, 13, 0, 
	127, 9, 13, 32, 33, 40, 41, 44, 
	46, 61, 62, 63, 127, 0, 34, 35, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 9, 13, 32, 34, 40, 41, 44, 
	46, 60, 61, 63, 127, 0, 31, 33, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 9, 13, 32, 34, 40, 41, 44, 
	46, 60, 61, 63, 127, 0, 31, 33, 
	57, 58, 64, 65, 90, 91, 93, 94, 
	126, 10, 13, 0, 127, 0, 10, 13, 
	40, 41, 92, 1, 127, 10, 13, 0, 
	127, 13, 0, 127, 0, 10, 13, 40, 
	41, 92, 1, 127, 0, 10, 13, 40, 
	41, 92, 1, 127, 10, 13, 0, 127, 
	13, 0, 127, 0, 10, 13, 40, 41, 
	92, 1, 127, 9, 13, 32, 33, 40, 
	41, 44, 46, 61, 63, 127, 0, 34, 
	35, 57, 58, 64, 65, 90, 91, 93, 
	94, 126, 0, 10, 13, 40, 41, 92, 
	1, 127, 10, 13, 0, 127, 13, 0, 
	127, 0, 10, 13, 40, 41, 92, 1, 
	127, 0, 9, 10, 13, 32, 91, 92, 
	93, 1, 127, 10, 13, 0, 127, 13, 
	0, 127, 0, 9, 10, 13, 32, 91, 
	92, 93, 1, 127, 9, 13, 32, 40, 
	62, 0, 127, 10, 13, 0, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 10, 
	13, 0, 127, 13, 0, 127, 0, 10, 
	13, 40, 41, 92, 1, 127, 0, 9, 
	10, 13, 32, 34, 92, 1, 127, 0, 
	9, 10, 13, 32, 34, 92, 1, 127, 
	10, 13, 0, 127, 13, 0, 127, 0, 
	9, 10, 13, 32, 34, 92, 1, 127, 
	0, 10, 13, 40, 41, 92, 1, 127, 
	10, 13, 0, 127, 13, 0, 127, 0, 
	10, 13, 40, 41, 92, 1, 127, 13, 
	82, 114, 33, 57, 59, 126, 13, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	9, 13, 32, 82, 114, 33, 57, 59, 
	126, 9, 13, 32, 82, 114, 33, 57, 
	59, 126, 9, 13, 32, 82, 114, 33, 
	57, 59, 126, 9, 13, 32, 82, 114, 
	33, 57, 59, 126, 9, 13, 32, 82, 
	114, 33, 57, 59, 126, 9, 13, 32, 
	82, 114, 33, 57, 59, 126, 9, 13, 
	32, 82, 114, 33, 57, 59, 126, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	9, 13, 32, 82, 114, 33, 57, 59, 
	126, 9, 13, 32, 82, 114, 33, 57, 
	59, 126, 9, 13, 32, 82, 114, 33, 
	57, 59, 126, 9, 13, 32, 82, 114, 
	33, 57, 59, 126, 9, 13, 32, 82, 
	114, 33, 57, 59, 126, 9, 13, 32, 
	82, 114, 33, 57, 59, 126, 9, 13, 
	32, 82, 114, 33, 57, 59, 126, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	9, 13, 32, 82, 114, 33, 57, 59, 
	126, 9, 13, 32, 82, 114, 33, 57, 
	59, 126, 9, 13, 32, 82, 114, 33, 
	57, 59, 126, 9, 13, 32, 82, 114, 
	33, 57, 59, 126, 9, 13, 32, 82, 
	114, 33, 57, 59, 126, 9, 13, 32, 
	82, 114, 33, 57, 59, 126, 9, 13, 
	32, 82, 114, 33, 57, 59, 126, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	9, 13, 32, 82, 114, 33, 57, 59, 
	126, 9, 13, 32, 82, 114, 33, 57, 
	59, 126, 9, 13, 32, 82, 114, 33, 
	57, 59, 126, 9, 13, 32, 82, 114, 
	33, 57, 59, 126, 9, 13, 32, 82, 
	114, 33, 57, 59, 126, 9, 13, 32, 
	82, 114, 33, 57, 59, 126, 9, 13, 
	32, 82, 114, 33, 57, 59, 126, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	9, 13, 32, 82, 114, 33, 57, 59, 
	126, 9, 13, 32, 82, 114, 33, 57, 
	59, 126, 9, 13, 32, 82, 114, 33, 
	57, 59, 126, 9, 13, 32, 82, 114, 
	33, 57, 59, 126, 9, 13, 32, 82, 
	114, 33, 57, 59, 126, 9, 13, 32, 
	82, 114, 33, 57, 59, 126, 9, 13, 
	32, 82, 114, 33, 57, 59, 126, 9, 
	13, 32, 82, 114, 33, 57, 59, 126, 
	0
};

static const char _rfc5322_single_lengths[] = {
	0, 1, 1, 1, 2, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	9, 9, 1, 2, 8, 1, 4, 5, 
	1, 2, 0, 3, 1, 2, 0, 8, 
	1, 2, 8, 6, 1, 2, 3, 1, 
	2, 0, 9, 1, 2, 7, 6, 1, 
	2, 3, 1, 2, 0, 8, 1, 2, 
	7, 9, 9, 1, 3, 1, 2, 0, 
	3, 1, 2, 0, 8, 3, 1, 2, 
	0, 5, 1, 2, 0, 5, 1, 2, 
	3, 1, 2, 0, 4, 5, 1, 2, 
	0, 3, 1, 2, 0, 3, 1, 2, 
	0, 1, 12, 12, 2, 11, 2, 7, 
	7, 2, 1, 7, 6, 2, 1, 6, 
	11, 2, 11, 6, 2, 6, 2, 1, 
	6, 12, 2, 12, 6, 2, 6, 2, 
	1, 6, 11, 2, 12, 12, 12, 2, 
	6, 2, 1, 6, 6, 2, 1, 6, 
	11, 6, 2, 1, 6, 8, 2, 1, 
	8, 5, 2, 6, 2, 1, 6, 7, 
	7, 2, 1, 7, 6, 2, 1, 6, 
	6, 2, 1, 6, 11, 2, 11, 6, 
	2, 6, 2, 1, 6, 12, 2, 12, 
	6, 2, 6, 2, 1, 6, 11, 2, 
	12, 12, 12, 2, 6, 2, 1, 6, 
	6, 2, 1, 6, 11, 6, 2, 1, 
	6, 8, 2, 1, 8, 5, 2, 6, 
	2, 1, 6, 7, 7, 2, 1, 7, 
	6, 2, 1, 6, 3, 1, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5
};

static const char _rfc5322_range_lengths[] = {
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	5, 5, 0, 0, 5, 0, 3, 2, 
	0, 0, 1, 3, 0, 0, 1, 5, 
	0, 0, 5, 0, 0, 0, 3, 0, 
	0, 1, 5, 0, 0, 6, 0, 0, 
	0, 3, 0, 0, 1, 5, 0, 0, 
	6, 5, 5, 0, 3, 0, 0, 1, 
	3, 0, 0, 1, 5, 3, 0, 0, 
	1, 3, 0, 0, 1, 0, 0, 0, 
	3, 0, 0, 1, 3, 2, 0, 0, 
	1, 3, 0, 0, 1, 3, 0, 0, 
	1, 0, 6, 6, 1, 6, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	6, 1, 6, 1, 1, 1, 1, 1, 
	1, 6, 1, 6, 1, 1, 1, 1, 
	1, 1, 6, 1, 6, 6, 6, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	6, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 6, 1, 6, 1, 
	1, 1, 1, 1, 1, 6, 1, 6, 
	1, 1, 1, 1, 1, 1, 6, 1, 
	6, 6, 6, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 6, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2
};

static const short _rfc5322_index_offsets[] = {
	0, 0, 2, 5, 8, 12, 17, 22, 
	27, 32, 37, 42, 47, 52, 57, 62, 
	66, 81, 96, 98, 101, 115, 117, 125, 
	133, 135, 138, 140, 147, 149, 152, 154, 
	168, 170, 173, 187, 194, 196, 199, 206, 
	208, 211, 213, 228, 230, 233, 247, 254, 
	256, 259, 266, 268, 271, 273, 287, 289, 
	292, 306, 321, 336, 338, 345, 347, 350, 
	352, 359, 361, 364, 366, 380, 387, 389, 
	392, 394, 403, 405, 408, 410, 416, 418, 
	421, 428, 430, 433, 435, 443, 451, 453, 
	456, 458, 465, 467, 470, 472, 479, 481, 
	484, 486, 488, 507, 526, 530, 548, 552, 
	561, 570, 574, 577, 586, 594, 598, 601, 
	609, 627, 631, 649, 657, 661, 669, 673, 
	676, 684, 703, 707, 726, 734, 738, 746, 
	750, 753, 761, 779, 783, 802, 821, 840, 
	844, 852, 856, 859, 867, 875, 879, 882, 
	890, 908, 916, 920, 923, 931, 941, 945, 
	948, 958, 965, 969, 977, 981, 984, 992, 
	1001, 1010, 1014, 1017, 1026, 1034, 1038, 1041, 
	1049, 1057, 1061, 1064, 1072, 1090, 1094, 1112, 
	1120, 1124, 1132, 1136, 1139, 1147, 1166, 1170, 
	1189, 1197, 1201, 1209, 1213, 1216, 1224, 1242, 
	1246, 1265, 1284, 1303, 1307, 1315, 1319, 1322, 
	1330, 1338, 1342, 1345, 1353, 1371, 1379, 1383, 
	1386, 1394, 1404, 1408, 1411, 1421, 1428, 1432, 
	1440, 1444, 1447, 1455, 1464, 1473, 1477, 1480, 
	1489, 1497, 1501, 1504, 1512, 1518, 1520, 1528, 
	1536, 1544, 1552, 1560, 1568, 1576, 1584, 1592, 
	1600, 1608, 1616, 1624, 1632, 1640, 1648, 1656, 
	1664, 1672, 1680, 1688, 1696, 1704, 1712, 1720, 
	1728, 1736, 1744, 1752, 1760, 1768, 1776, 1784, 
	1792, 1800, 1808, 1816, 1824, 1832, 1840
};

static const short _rfc5322_indicies[] = {
	0, 1, 4, 3, 2, 5, 4, 2, 
	6, 5, 4, 2, 4, 7, 7, 3, 
	2, 4, 8, 8, 3, 2, 4, 9, 
	9, 3, 2, 4, 10, 10, 3, 2, 
	4, 11, 11, 3, 2, 4, 12, 12, 
	3, 2, 4, 13, 13, 3, 2, 4, 
	14, 14, 3, 2, 4, 15, 15, 3, 
	2, 16, 16, 17, 3, 2, 16, 16, 
	18, 2, 19, 20, 19, 22, 23, 21, 
	24, 21, 21, 21, 21, 21, 21, 21, 
	2, 25, 26, 25, 22, 27, 21, 28, 
	21, 21, 21, 21, 21, 21, 21, 2, 
	29, 2, 25, 25, 2, 30, 31, 30, 
	22, 32, 24, 21, 21, 21, 21, 21, 
	21, 21, 2, 33, 2, 35, 36, 35, 
	37, 34, 34, 34, 2, 35, 36, 35, 
	38, 37, 34, 34, 2, 39, 2, 35, 
	35, 2, 40, 2, 42, 38, 43, 41, 
	41, 41, 2, 44, 2, 41, 41, 2, 
	45, 2, 28, 46, 28, 48, 49, 47, 
	47, 47, 47, 47, 47, 47, 47, 2, 
	50, 2, 28, 28, 2, 51, 52, 51, 
	47, 53, 54, 47, 55, 47, 47, 47, 
	47, 47, 2, 51, 52, 51, 53, 54, 
	55, 2, 56, 2, 51, 51, 2, 57, 
	51, 58, 53, 53, 53, 2, 59, 2, 
	53, 53, 2, 2, 60, 61, 62, 61, 
	63, 64, 63, 63, 63, 65, 63, 63, 
	63, 63, 63, 2, 66, 2, 61, 61, 
	2, 67, 68, 67, 63, 69, 70, 71, 
	63, 63, 63, 63, 63, 63, 2, 67, 
	68, 67, 69, 72, 71, 2, 73, 2, 
	67, 67, 2, 74, 67, 75, 69, 69, 
	69, 2, 76, 2, 69, 69, 2, 2, 
	77, 72, 78, 72, 79, 80, 79, 79, 
	79, 79, 79, 79, 79, 79, 2, 81, 
	2, 72, 72, 2, 67, 68, 67, 79, 
	69, 72, 71, 79, 79, 79, 79, 79, 
	79, 2, 82, 83, 82, 85, 86, 84, 
	87, 84, 84, 84, 84, 84, 84, 84, 
	2, 88, 89, 88, 22, 90, 21, 24, 
	21, 21, 21, 21, 21, 21, 21, 2, 
	91, 2, 93, 94, 95, 92, 92, 92, 
	2, 96, 2, 92, 92, 2, 97, 2, 
	98, 72, 99, 80, 80, 80, 2, 100, 
	2, 80, 80, 2, 101, 2, 72, 78, 
	72, 63, 80, 63, 63, 63, 63, 63, 
	63, 63, 63, 2, 102, 61, 103, 64, 
	64, 64, 2, 104, 2, 64, 64, 2, 
	105, 2, 106, 107, 106, 108, 109, 65, 
	65, 65, 2, 110, 2, 106, 106, 2, 
	111, 2, 112, 113, 112, 114, 71, 2, 
	115, 2, 112, 112, 2, 116, 112, 117, 
	114, 114, 114, 2, 118, 2, 114, 114, 
	2, 119, 2, 121, 122, 121, 123, 120, 
	120, 120, 2, 121, 122, 121, 51, 123, 
	120, 120, 2, 124, 2, 121, 121, 2, 
	125, 2, 126, 28, 127, 49, 49, 49, 
	2, 128, 2, 49, 49, 2, 129, 2, 
	130, 25, 131, 27, 27, 27, 2, 132, 
	2, 27, 27, 2, 133, 2, 134, 2, 
	135, 136, 135, 138, 139, 4, 4, 4, 
	140, 137, 137, 4, 4, 137, 4, 137, 
	4, 137, 2, 141, 142, 141, 138, 143, 
	4, 4, 4, 144, 137, 137, 4, 4, 
	137, 4, 137, 4, 137, 2, 145, 5, 
	4, 2, 146, 147, 146, 138, 148, 4, 
	4, 149, 137, 137, 4, 4, 137, 4, 
	137, 4, 137, 2, 150, 5, 4, 2, 
	4, 152, 4, 153, 152, 4, 154, 151, 
	2, 4, 152, 4, 153, 152, 155, 154, 
	151, 2, 156, 5, 4, 2, 158, 157, 
	2, 4, 152, 6, 153, 152, 155, 154, 
	151, 2, 4, 4, 160, 4, 155, 161, 
	159, 2, 162, 5, 4, 2, 164, 163, 
	2, 4, 6, 160, 4, 155, 161, 159, 
	2, 165, 166, 165, 168, 169, 4, 4, 
	4, 167, 167, 4, 4, 167, 4, 167, 
	4, 167, 2, 170, 5, 4, 2, 171, 
	172, 171, 167, 173, 4, 4, 174, 167, 
	175, 4, 4, 167, 4, 167, 4, 167, 
	2, 171, 172, 171, 173, 174, 175, 4, 
	2, 176, 5, 4, 2, 4, 4, 177, 
	4, 171, 178, 173, 2, 179, 5, 4, 
	2, 181, 180, 2, 4, 6, 177, 4, 
	171, 178, 173, 2, 182, 183, 182, 184, 
	185, 4, 4, 4, 184, 184, 186, 4, 
	4, 184, 4, 184, 4, 184, 2, 187, 
	5, 4, 2, 188, 189, 188, 184, 190, 
	4, 4, 191, 184, 192, 184, 4, 4, 
	184, 4, 184, 4, 184, 2, 188, 189, 
	188, 190, 193, 192, 4, 2, 194, 5, 
	4, 2, 4, 4, 195, 4, 188, 196, 
	190, 2, 197, 5, 4, 2, 199, 198, 
	2, 4, 6, 195, 4, 188, 196, 190, 
	2, 193, 200, 193, 201, 202, 4, 4, 
	4, 201, 201, 4, 4, 201, 4, 201, 
	4, 201, 2, 203, 5, 4, 2, 188, 
	189, 188, 201, 190, 4, 4, 193, 201, 
	192, 201, 4, 4, 201, 4, 201, 4, 
	201, 2, 204, 205, 204, 207, 208, 4, 
	4, 4, 209, 206, 206, 4, 4, 206, 
	4, 206, 4, 206, 2, 210, 211, 210, 
	138, 212, 4, 4, 4, 149, 137, 137, 
	4, 4, 137, 4, 137, 4, 137, 2, 
	213, 5, 4, 2, 4, 4, 215, 4, 
	216, 217, 214, 2, 218, 5, 4, 2, 
	220, 219, 2, 4, 6, 215, 4, 216, 
	217, 214, 2, 4, 4, 221, 4, 193, 
	222, 202, 2, 223, 5, 4, 2, 225, 
	224, 2, 4, 6, 221, 4, 193, 222, 
	202, 2, 193, 200, 193, 184, 202, 4, 
	4, 4, 184, 184, 4, 4, 184, 4, 
	184, 4, 184, 2, 4, 4, 226, 4, 
	182, 227, 185, 2, 228, 5, 4, 2, 
	230, 229, 2, 4, 6, 226, 4, 182, 
	227, 185, 2, 4, 231, 4, 232, 231, 
	4, 233, 234, 186, 2, 235, 5, 4, 
	2, 237, 236, 2, 4, 231, 6, 232, 
	231, 4, 233, 234, 186, 2, 238, 239, 
	238, 240, 192, 4, 2, 241, 5, 4, 
	2, 4, 4, 242, 4, 238, 243, 240, 
	2, 244, 5, 4, 2, 246, 245, 2, 
	4, 6, 242, 4, 238, 243, 240, 2, 
	4, 248, 4, 249, 248, 4, 250, 247, 
	2, 4, 248, 4, 249, 248, 171, 250, 
	247, 2, 251, 5, 4, 2, 253, 252, 
	2, 4, 248, 6, 249, 248, 171, 250, 
	247, 2, 4, 4, 254, 4, 165, 255, 
	169, 2, 256, 5, 4, 2, 258, 257, 
	2, 4, 6, 254, 4, 165, 255, 169, 
	2, 4, 4, 259, 4, 141, 260, 143, 
	2, 261, 5, 4, 2, 263, 262, 2, 
	4, 6, 259, 4, 141, 260, 143, 2, 
	144, 264, 144, 266, 267, 4, 4, 4, 
	265, 265, 4, 4, 265, 4, 265, 4, 
	265, 2, 268, 5, 4, 2, 269, 270, 
	269, 265, 271, 4, 4, 272, 265, 273, 
	4, 4, 265, 4, 265, 4, 265, 2, 
	269, 270, 269, 271, 272, 273, 4, 2, 
	274, 5, 4, 2, 4, 4, 275, 4, 
	269, 276, 271, 2, 277, 5, 4, 2, 
	279, 278, 2, 4, 6, 275, 4, 269, 
	276, 271, 2, 280, 281, 280, 282, 283, 
	4, 4, 4, 282, 282, 284, 4, 4, 
	282, 4, 282, 4, 282, 2, 285, 5, 
	4, 2, 286, 287, 286, 282, 288, 4, 
	4, 289, 282, 290, 282, 4, 4, 282, 
	4, 282, 4, 282, 2, 286, 287, 286, 
	288, 291, 290, 4, 2, 292, 5, 4, 
	2, 4, 4, 293, 4, 286, 294, 288, 
	2, 295, 5, 4, 2, 297, 296, 2, 
	4, 6, 293, 4, 286, 294, 288, 2, 
	291, 298, 291, 299, 300, 4, 4, 4, 
	299, 299, 4, 4, 299, 4, 299, 4, 
	299, 2, 301, 5, 4, 2, 286, 287, 
	286, 299, 288, 4, 4, 291, 299, 290, 
	299, 4, 4, 299, 4, 299, 4, 299, 
	2, 302, 303, 302, 207, 304, 4, 4, 
	4, 305, 206, 206, 4, 4, 206, 4, 
	206, 4, 206, 2, 306, 307, 306, 138, 
	308, 4, 4, 4, 140, 137, 137, 4, 
	4, 137, 4, 137, 4, 137, 2, 309, 
	5, 4, 2, 4, 4, 311, 4, 312, 
	313, 310, 2, 314, 5, 4, 2, 316, 
	315, 2, 4, 6, 311, 4, 312, 313, 
	310, 2, 4, 4, 317, 4, 291, 318, 
	300, 2, 319, 5, 4, 2, 321, 320, 
	2, 4, 6, 317, 4, 291, 318, 300, 
	2, 291, 298, 291, 282, 300, 4, 4, 
	4, 282, 282, 4, 4, 282, 4, 282, 
	4, 282, 2, 4, 4, 322, 4, 280, 
	323, 283, 2, 324, 5, 4, 2, 326, 
	325, 2, 4, 6, 322, 4, 280, 323, 
	283, 2, 4, 327, 4, 328, 327, 4, 
	329, 330, 284, 2, 331, 5, 4, 2, 
	333, 332, 2, 4, 327, 6, 328, 327, 
	4, 329, 330, 284, 2, 334, 335, 334, 
	336, 290, 4, 2, 337, 5, 4, 2, 
	4, 4, 338, 4, 334, 339, 336, 2, 
	340, 5, 4, 2, 342, 341, 2, 4, 
	6, 338, 4, 334, 339, 336, 2, 4, 
	344, 4, 345, 344, 4, 346, 343, 2, 
	4, 344, 4, 345, 344, 269, 346, 343, 
	2, 347, 5, 4, 2, 349, 348, 2, 
	4, 344, 6, 345, 344, 269, 346, 343, 
	2, 4, 4, 350, 4, 144, 351, 267, 
	2, 352, 5, 4, 2, 354, 353, 2, 
	4, 6, 350, 4, 144, 351, 267, 2, 
	355, 356, 356, 3, 3, 1, 355, 1, 
	4, 355, 4, 356, 356, 3, 3, 1, 
	38, 355, 38, 356, 356, 3, 3, 1, 
	94, 355, 94, 356, 356, 3, 3, 1, 
	25, 355, 25, 356, 356, 3, 3, 1, 
	141, 355, 141, 356, 356, 3, 3, 1, 
	155, 355, 155, 356, 356, 3, 3, 1, 
	152, 355, 152, 356, 356, 3, 3, 1, 
	159, 355, 159, 356, 356, 3, 3, 1, 
	165, 355, 165, 356, 356, 3, 3, 1, 
	171, 355, 171, 356, 356, 3, 3, 1, 
	173, 355, 173, 356, 356, 3, 3, 1, 
	182, 355, 182, 356, 356, 3, 3, 1, 
	188, 355, 188, 356, 356, 3, 3, 1, 
	190, 355, 190, 356, 356, 3, 3, 1, 
	193, 355, 193, 356, 356, 3, 3, 1, 
	216, 355, 216, 356, 356, 3, 3, 1, 
	214, 355, 214, 356, 356, 3, 3, 1, 
	202, 355, 202, 356, 356, 3, 3, 1, 
	185, 355, 185, 356, 356, 3, 3, 1, 
	231, 355, 231, 356, 356, 3, 3, 1, 
	238, 355, 238, 356, 356, 3, 3, 1, 
	240, 355, 240, 356, 356, 3, 3, 1, 
	248, 355, 248, 356, 356, 3, 3, 1, 
	169, 355, 169, 356, 356, 3, 3, 1, 
	143, 355, 143, 356, 356, 3, 3, 1, 
	144, 355, 144, 356, 356, 3, 3, 1, 
	269, 355, 269, 356, 356, 3, 3, 1, 
	271, 355, 271, 356, 356, 3, 3, 1, 
	280, 355, 280, 356, 356, 3, 3, 1, 
	286, 355, 286, 356, 356, 3, 3, 1, 
	288, 355, 288, 356, 356, 3, 3, 1, 
	291, 355, 291, 356, 356, 3, 3, 1, 
	312, 355, 312, 356, 356, 3, 3, 1, 
	310, 355, 310, 356, 356, 3, 3, 1, 
	300, 355, 300, 356, 356, 3, 3, 1, 
	283, 355, 283, 356, 356, 3, 3, 1, 
	327, 355, 327, 356, 356, 3, 3, 1, 
	334, 355, 334, 356, 356, 3, 3, 1, 
	336, 355, 336, 356, 356, 3, 3, 1, 
	344, 355, 344, 356, 356, 3, 3, 1, 
	267, 355, 267, 356, 356, 3, 3, 1, 
	0
};

static const short _rfc5322_trans_targs[] = {
	229, 0, 0, 2, 3, 4, 230, 6, 
	7, 8, 9, 10, 11, 12, 13, 14, 
	15, 98, 16, 17, 97, 20, 22, 93, 
	31, 17, 18, 93, 31, 19, 20, 21, 
	27, 231, 23, 23, 24, 26, 20, 25, 
	23, 27, 28, 30, 29, 27, 32, 34, 
	84, 89, 33, 35, 36, 38, 31, 42, 
	37, 39, 41, 40, 38, 42, 43, 45, 
	69, 73, 44, 46, 47, 49, 68, 57, 
	53, 48, 50, 52, 51, 49, 54, 56, 
	64, 55, 58, 59, 20, 22, 60, 31, 
	58, 59, 60, 232, 60, 61, 58, 63, 
	62, 60, 65, 67, 66, 64, 70, 72, 
	71, 69, 73, 74, 76, 77, 75, 73, 
	77, 78, 80, 79, 81, 83, 82, 80, 
	85, 85, 86, 88, 87, 85, 90, 92, 
	91, 89, 94, 96, 95, 93, 233, 99, 
	100, 101, 103, 168, 172, 99, 100, 168, 
	172, 234, 101, 102, 108, 112, 235, 104, 
	104, 105, 106, 101, 236, 104, 107, 108, 
	109, 110, 237, 108, 111, 112, 113, 114, 
	159, 164, 238, 115, 116, 117, 112, 121, 
	239, 118, 119, 240, 117, 120, 121, 122, 
	123, 145, 149, 241, 124, 125, 126, 144, 
	133, 130, 242, 127, 128, 243, 126, 129, 
	131, 132, 140, 244, 134, 135, 101, 103, 
	136, 112, 134, 135, 136, 245, 136, 137, 
	134, 138, 246, 136, 139, 141, 142, 247, 
	140, 143, 146, 147, 248, 145, 148, 149, 
	150, 151, 153, 249, 149, 152, 153, 154, 
	155, 250, 156, 157, 251, 155, 158, 160, 
	160, 161, 162, 252, 160, 163, 165, 166, 
	253, 164, 167, 169, 170, 254, 168, 171, 
	173, 174, 219, 224, 255, 175, 176, 177, 
	172, 181, 256, 178, 179, 257, 177, 180, 
	181, 182, 183, 205, 209, 258, 184, 185, 
	186, 204, 193, 190, 259, 187, 188, 260, 
	186, 189, 191, 192, 200, 261, 194, 195, 
	196, 172, 194, 195, 196, 262, 196, 197, 
	194, 198, 263, 196, 199, 201, 202, 264, 
	200, 203, 206, 207, 265, 205, 208, 209, 
	210, 211, 213, 266, 209, 212, 213, 214, 
	215, 267, 216, 217, 268, 215, 218, 220, 
	220, 221, 222, 269, 220, 223, 225, 226, 
	270, 224, 227, 1, 5
};

static const char _rfc5322_trans_actions[] = {
	0, 0, 11, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 9, 9, 3, 13, 1, 0, 3, 
	3, 0, 0, 0, 0, 0, 3, 13, 
	3, 0, 1, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 5, 0, 1, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 5, 0, 5, 0, 0, 1, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 5, 0, 5, 0, 1, 
	0, 0, 19, 25, 16, 7, 19, 19, 
	3, 13, 3, 0, 0, 0, 0, 5, 
	0, 5, 0, 5, 0, 5, 0, 5, 
	0, 5, 0, 0, 5, 1, 0, 5, 
	0, 0, 0, 0, 0, 5, 0, 5, 
	1, 0, 0, 5, 0, 5, 0, 5, 
	0, 5, 0, 5, 0, 5, 0, 3, 
	13, 1, 0, 3, 3, 0, 0, 0, 
	0, 0, 3, 13, 3, 3, 0, 1, 
	0, 0, 5, 0, 0, 5, 5, 0, 
	0, 5, 0, 5, 5, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 5, 0, 5, 5, 0, 0, 
	1, 0, 1, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 5, 0, 5, 5, 
	0, 1, 0, 0, 19, 25, 16, 7, 
	19, 19, 3, 13, 3, 0, 0, 0, 
	0, 5, 0, 5, 5, 0, 5, 0, 
	5, 5, 0, 5, 0, 5, 5, 0, 
	0, 5, 1, 0, 5, 5, 0, 0, 
	0, 0, 0, 5, 0, 5, 5, 1, 
	0, 0, 5, 0, 5, 5, 0, 5, 
	0, 5, 5, 0, 5, 0, 5, 5, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 0, 5, 0, 5, 5, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 0, 0, 0, 0, 5, 0, 
	5, 5, 0, 1, 0, 0, 19, 29, 
	19, 19, 3, 22, 3, 0, 0, 0, 
	0, 5, 0, 5, 5, 0, 5, 0, 
	5, 5, 0, 5, 0, 5, 5, 0, 
	0, 5, 1, 0, 5, 5, 0, 0, 
	0, 0, 0, 5, 0, 5, 5, 1, 
	0, 0, 5, 0, 5, 5, 0, 5, 
	0, 5, 5, 0, 9
};

static const char _rfc5322_eof_actions[] = {
	0, 0, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 11, 11, 11, 11, 
	11, 11, 11, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
};

static const int rfc5322_start = 228;
static const int rfc5322_first_final = 228;
static const int rfc5322_error = 0;

static const int rfc5322_en_main = 228;


#line 124 "Rfc5322HeaderParser.cpp"


Rfc5322HeaderParser::Rfc5322HeaderParser():
    m_error(false)
{
}

void Rfc5322HeaderParser::clear()
{
    m_error = false;
    references.clear();
}

bool Rfc5322HeaderParser::parse(const QByteArray &data)
{
    clear();

    const char *p = data.data();
    const char *pe = p + data.length();
    const char *eof = pe;
    int cs;

    QByteArray str;
    QList<QByteArray> list;

    
#line 851 "Rfc5322HeaderParser.generated.cpp"
	{
	cs = rfc5322_start;
	}

#line 150 "Rfc5322HeaderParser.cpp"
    
#line 858 "Rfc5322HeaderParser.generated.cpp"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _rfc5322_trans_keys + _rfc5322_key_offsets[cs];
	_trans = _rfc5322_index_offsets[cs];

	_klen = _rfc5322_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _rfc5322_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _rfc5322_indicies[_trans];
	cs = _rfc5322_trans_targs[_trans];

	if ( _rfc5322_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _rfc5322_actions + _rfc5322_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 34 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "push_current_char " << *p;
#endif
        str.append(*p);
    }
	break;
	case 1:
#line 41 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "clear_str";
#endif
        str.clear();
    }
	break;
	case 2:
#line 48 "Rfc5322HeaderParser.cpp"
	{
        switch (*p) {
            case 'n':
                str += "\n";
                break;
            case 'r':
                str += "\r";
                break;
            case '0':
                str += "\0";
                break;
            case '\\':
                str += "\\";
                break;
            default:
                str += '\\' + *p;
        }
#ifdef RAGEL_DEBUG
        qDebug() << "push_current_backslashed \\" << *p;
#endif
    }
	break;
	case 3:
#line 70 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "push_string_list " << str.data();
#endif
        list.append(str);
        str.clear();
    }
	break;
	case 4:
#line 78 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "clear_list";
#endif
        list.clear();
        str.clear();
    }
	break;
	case 5:
#line 104 "Rfc5322HeaderParser.cpp"
	{
        references += list;
#ifdef RAGEL_DEBUG
        qDebug() << "got_references_header:" << references;
#endif
    }
	break;
	case 6:
#line 111 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "Error when parsing RFC5322 headers";
#endif
        m_error = true;
    }
	break;
#line 1012 "Rfc5322HeaderParser.generated.cpp"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const char *__acts = _rfc5322_actions + _rfc5322_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 6:
#line 111 "Rfc5322HeaderParser.cpp"
	{
#ifdef RAGEL_DEBUG
        qDebug() << "Error when parsing RFC5322 headers";
#endif
        m_error = true;
    }
	break;
#line 1037 "Rfc5322HeaderParser.generated.cpp"
		}
	}
	}

	_out: {}
	}

#line 151 "Rfc5322HeaderParser.cpp"

    return !m_error;
}

}
}

#if 0
#include <iostream>
int main()
{
    QByteArray data;
    std::string line;

    while (std::getline(std::cin, line)) {
        data += line.c_str();
        data += '\n';
    }

    Imap::Parser::Rfc5322HeaderParser parser;
    bool res = parser.parse(data);
    if (!res) {
        qDebug() << "Parsing error.";
        return 1;
    }

    qDebug() << "References:" << parser.references;

    return 0;
}
#endif
