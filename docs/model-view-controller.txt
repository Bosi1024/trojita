important note: this is a work-in-progress that is obsoleted by actual
sources. Please consult the source code if you want to know what's up...


what about model-view-controller for trojita?

view -- the gui layer. As simple as possible because we want multiple GUIs.
model -- IMAPMailbox
controller -- IMAPClient -- something dealing with model & view...

GUI design:
- our aim is that controller drives all the operations
- user presses a button -> controller receives it and [something] -> [something] -> 
  processing/chat via Parser -> action is performed/data transfered/whatever -> 
  task done -> GUI is updated
- problem: delays & interactivity
- GUI should operate as smoothly as possible
- huge transfers should be abortable (either explicitly or at least overridable 
  by a higher-priority task like deleting mail, changing sort criteria, flags 
  or going to next message
- we need one Parser per connection
- we should be able to avoid multiple connections to one mailbox/server
- viewing prefered parts of message (html + plaintext, mua should be able to
  show both)

------------------
GUI -> controller:
------------------

per-message stuff:
- show message(offset) -- user has moved her view to offset-th message from the begin of her view
- add flag(offset, name)
- clear flag(offset, name)
  (delete is a special case of add_flag)
- copy(offset, target)
- move(offset, target)
- show message source (do we really need that? isn't it enough to show
  headers?)
TODO: stuff like reply, forward, edit,...

per-mailbox stuff:
- switch_to_mailbox(name)
- delete mailbox
- rename mailbox
- create new mailbox
- expunge messages (FIXME: global or per mailbox?)
- search
- threading/flat
- sorting
- force check for new messages

global:
- list mailboxes
- subscriptions
- ?? global expunge ??
FIXME: settings

some commands can create a "task", ie something that has name and progress.
when it's done, it vanishes

------------------
controller -> GUI:
------------------
- each change in number of messages/tree structure means that GUI forgets everything

messages:
- message structure of the message being selected atm
- structure of current view (number of messages, tree-like nesting,...) --
  this one causes everything mbox/msg-related to be flushed from GUI
- message contents
- envelope of message N

global:
- alert

progress updates:
- task foo is at n%


Replying:
- "reply", "reply to all", "reply to author only", "reply to ML"
- when some text is selected -> quote only that
