<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC5234 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5234.xml">
<!ENTITY RFC3501 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3501.xml">
<!ENTITY RFC4731 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4731.xml">
<!ENTITY RFC5256 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5256.xml">
<!ENTITY RFC5267 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5267.xml">
<!ENTITY DRAFT-inthread SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-morg-inthread-01.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-imap-incthread-00" ipr="trust200902">

  <front>
    <title abbrev="IMAP INCTHREAD Extension">IMAP Extension for Incremental Threading (INCTHREAD)</title>

    <author fullname="Jan Kundrat" initials="J." surname="Kundrat">
      <address>
        <postal>
          <street>Eledrova 558</street>
          <city>Prague</city>
          <code>181 00</code>
          <country>CZ</country>
        </postal>
        <email>jkt@flaska.net</email>
      </address>
    </author>

    <date year="2012" month="July" day="25"/>

    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>IMAP</keyword>
    <keyword>THREAD</keyword>
    <keyword>INTHREAD</keyword>
    <keyword>incremental threading</keyword>
    <keyword>ESEARCH</keyword>
    <keyword>CONTEXT</keyword>
    <keyword>CONTEXT=SORT</keyword>
    <keyword>CONTEXT=SEARCH</keyword>
    <keyword>CONTEXT=THREAD</keyword>

    <abstract>
        <t>This document describes the INCTHREAD IMAP extension which enables clients to retrieve incremental updates of
            the mailbox threading.  The extension repurposes the ESEARCH response for passing along the threading
            information and builds on top of Arnt Gulbrandsen's work on the INTHREAD search key.  The UID THREAD command
            is also extended to allow activating this extension.  Together, these changes make it possible for clients
            not to fetch the complete mailbox threading any time a new message arrives.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
        <t>Online IMAP clients which want to conserve the required bandwidth and also show messages in threads for their
            users have an option to delegate the message threading to the IMAP server through mechanisms outlines in
            <xref target="RFC5256"/>.  Using the UID SEARCH command, clients do not have to download the message headers
            (like the Message-Id, References and In-Reply-To), fetching a complete thread mapping of all messages in a
            mailbox instead.</t>

        <t>Unfortunately, the savings in transferred data is significantly reduced when clients have to fetch the thread
            mapping over and over again, which is the case when a new message arrives.  Even if the clients obtained
            knowledge of the relevant headers of new arrivals, these data alone are not sufficient to determine a proper
            place where to insert the newly arriving message.  Furthermore, a single newly arriving message could
            potentially affect placement of many messages or even all of them in a pathological case due to joining of
            adjacent threads together.  This issue prevents using approach similar to the CONTEXT=SEARCH and
            CONTEXT=SORT extensions <xref target="RFC5267"/> where only a position of the new arrival is communicated in
            an incremental manner.</t>

        <t>This extension builds upon Arnt Gulbrandsen's work <xref target="I-D.ietf-morg-inthread"/> and reuses the
            INTHREAD search key defined in said draft.  This search key is used to inform the server that the search
            conditions are to refer to all threads containing any messages which match the original search criteria.
            However, the untagged THREAD response does not contain any data about the position of the affected thread
            among other threads in the mailbox.  Support for INTHREAD alone therefore does not relief the clients from
            performing additional operations due to missing information.  If the affected threads were always placed at
            the logical end of the mailbox, copying older messages would yield results different from the complete
            THREAD command.  Similarly, attempting to reuse the original thread position would possibly limit the
            usefulness of the REFS algorithm <xref target="I-D.ietf-morg-inthread"/> which sorts threads with "fresh
            messages" at the end of the view.</t>

        <t>Because the THREAD response cannot transmit the position of the resulting thread relative to other threads in
            the mailbox, the ESEARCH response <xref target="RFC4731"/> is used and the UID THREAD command is extended to
            allow for specifying the return options in manner consistent with how SEARCH and UID SEARCH were modified.
            Finally, two new ESEARCH return option, the THREAD and the INCTHREAD, are defined.</t>

        <t>These modifications together allow clients to delegate the threading operation completely to the server side
            without significantly increasing network traffic even on busy mailboxes.</t>

        <section title="Drawbacks and Alternatives">
            <t>This extension can still transfer excessive amounts of data because it transfers complete threads instead
                of incremental difference updates.  However, this approach allows for reusing the clients' and servers'
                existing facilities, both for parsing and response processing.  In addition, unless the protocol
                mandated history tracking of the threading tree, a much intrusive and resource-demanding feature, the
                incremental updates would be only possible in case where the mailbox is currently selected.  This
                extension affirms the decision about threading requests to remain on the client side, letting it use its
                policies about when to request full threading information and when to use the incremental updates.</t>

            <t>No support for automated updates of the threading data in the sense of the CONTEXT extension <xref
                    target="RFC5267"/> are defined at this point.  This might change based on feedback from other server
                and client vendors.</t>
        </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="IMAP Protocol Changes">
        <section title="New SEARCH Keys">
            <t>This document reuses the INTHREAD search key from <xref target="I-D.ietf-morg-inthread"/> with no
                changes in meaning or semantics.  Please note the difference between the INTHREAD and INCTHREAD ESEARCH
                return options.</t>
        </section>

        <section title="Modified IMAP Commands">
            <section title="Modified UID THREAD Command">
                <t>The UID THREAD command is extended with the following two return options:</t>

                <t><list style="hanging">
                        <t hangText="THREAD">Return the threading information through the ESEARCH response using syntax
                            similar to the untagged THREAD response.</t>
                        <t hangText="INCTHREAD">Return a dedicated INCTHREAD section for each thread found in the result
                            set.</t>
                </list></t>

                <t>The THREAD and INCTHREAD return options are mutually exclusive.  Servers MUST return a tagged BAD
                    response if a client specifies both return options in a single UID THREAD command.</t>

                <t>Servers MUST use the ESEARCH response instead of untagged THREAD response when responding to the
                    extended form of the UID THREAD command.</t>

                <t>The THREAD and UID THREAD are two distinct commands.  Because clients are not expected to rely on
                    transient identifiers like the message sequence numbers for threading retrieval and storage and
                    because of the requirement of using UIDs in the INCTHREAD response, no modification to the THREAD
                    command is defined.  This might change in future iterations of this draft if client authors expects
                    sufficient interest.</t>
            </section>
        </section>

        <section title="ESEARCH Extension">
            <t>Servers announcing the INCTHREAD capability support two new search return options:</t>

            <t><list style="hanging">
                    <t hangText="THREAD">Method for conveying the threading information in form similar to the THREAD
                        untagged response.</t>

                    <t hangText="INCTHREAD">Response contains the threading information along with the specification of
                        a UID of the previous thread root.</t>
            </list></t>

            <section title="The THREAD ESEARCH Return Value">
                <t>The THREAD return value uses the same format as the threading data in the untagged THREAD responses
                    <xref target="RFC5256"/>.  This return value is defined to allow clients to easily match data
                    received over network with the tag of the command which caused them, as per the usual ESEARCH
                    rules.</t>
            </section>

            <section title="The INCTHREAD ESEARCH Return Value">
                <t>The INCTHREAD return value consists of "previous thread root UID" followed by "threading response
                    containing a single thread".  The UID of the previous thread root MUST be zero if the thread sorts
                    first in the resulting list of threads.</t>

                <t>A dedicated INCTHREAD record MUST be present for each thread contained in the result set.</t>
            </section>
        </section>

        <section title="New Capabilities">
            <t>This document adds two new IMAP capabilities, the ETHREAD and INCTHREAD.</t>

            <t>Servers announcing the ETHREAD capability support the extended UID THREAD command syntax and the THREAD
                return option.</t>

            <t>Servers supporting the INCTHREAD capability MUST support and announce the ETHREAD capability as well.</t>
        </section>
    </section>

    <section title="Examples">
        <t>FIXME</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
        <t>FIXME</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>IMAP4 capabilities are registered by publishing a standards track or IESG approved experimental RFC.  The
          registry is currently located at:</t>
      <t>http://www.iana.org/assignments/imap4-capabilities</t>
      <t>This document defines the ETHREAD and INCTHREAD IMAP capabilities.  IANA will be asked to add these capability
          to the registry.</t>
    </section>

    <section title="Formal Syntax">
        <t>The following syntax specification uses the Augmented Backus-Naur
            Form (ABNF) notation as specified in <xref target="RFC5234"/>.</t>

        <t>Non-terminals referenced but not defined below are as defined by
            <xref target="RFC3501"/>, <xref target="RFC4731"/>, or <xref target="RFC5256"/>.</t>

        <t>FIXME</t>
        <figure align="center">
            <artwork align="left" type="abnf"><![CDATA[
capability          =/ "QRESYNC-ARRIVED"

]]></artwork>
        </figure>
    </section>

    <section anchor="Security" title="Security Considerations">
        <t>FIXME</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;

      &RFC5234;

      &RFC3501;

      &RFC4731;

      &RFC5256;

      &RFC5267;

      &DRAFT-inthread;
    </references>
  </back>
</rfc>
